name: ci
on: push
jobs:
  build:
    permissions:
      contents: read
      id-token: write
      packages: write
    env:
      CI: 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Build devShell
        run: |
          nix print-dev-env > result-devShell.sh
          echo "BASH_ENV=$PWD/result-devShell.sh" >> $GITHUB_ENV
      - name: Prepare devContainer context
        run: |
          nix build .#devShells.$(nix eval --expr 'builtins.currentSystem' --impure --raw).default --print-out-paths > .devcontainer/imports/devShell.gcroot
          nix-store --export $(nix-store -qR $(cat .devcontainer/imports/devShell.gcroot)) > .devcontainer/imports/devShell.nar
          nix print-dev-env > .devcontainer/imports/devShell.sh
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - name: Build devContainer
        uses: docker/build-push-action@v6
        with:
          context: .devcontainer
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ghcr.io/${{ github.repository_owner }}/webschembly-devcontainer:latest
      - name: Cache cargo target
        uses: actions/cache@v4
        with:
          path: ./target
          key: cargo-cache-20250204-1-${{ github.sha }}
          restore-keys: |
            cargo-cache-20250204-1-
      - name: Cache cargo home
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: cargo-home-20250204-1-${{ github.sha }}
          restore-keys: |
            cargo-home-20250204-1-
      - name: Format
        run: |
          cargo fmt --check
          nixpkgs-fmt --check $(git ls-files ':(attr:!linguist-generated)*.nix')
      - name: Clippy
        run: |
          cargo clippy --all --lib --tests -- -D warnings
      - name: Test
        run: |
          cargo test
      - name: E2E Test
        run: |
          npm ci
          cd webschembly-js && make test
      - name: Build Playground
        run: |
          nix build .#webschembly-playground-for-pages --out-link result-playground
      - name: Upload Playground
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: result-playground/
      - name: Build cli
        run: |
          nix build .#webschembly-compiler-cli --out-link result-cli
      - name: Build runtime
        run: |
          nix build .#webschembly-runtime --out-link result-runtime
      - uses: actions/upload-artifact@v4
        with:
          name: cli
          path: result-cli-bin/bin/webschembly-compiler-cli
      - uses: actions/upload-artifact@v4
        with:
          name: runtime
          path: result-runtime/lib/webschembly_runtime.wasm
  deploy:
    needs: build
    if: github.ref == 'refs/heads/master'
    permissions:
      id-token: write
      pages: write
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/deploy-pages@v4
        id: deployment
